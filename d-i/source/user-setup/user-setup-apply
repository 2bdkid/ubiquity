#! /bin/sh
set -e

. /usr/share/debconf/confmodule

if [ "$1" ]; then
	ROOT="$1"
	chroot=chroot
	log='log-output -t user-setup'
else
	ROOT=
	chroot=
	log=
fi

. /usr/lib/user-setup/functions.sh

# Set a password, via chpasswd.
# Use a heredoc rather than echo, to avoid the password
# showing in the process table. (However, this is normally
# only called when first installing the system, when root has no
# password at all, so that should be an unnecessary precaution).
#
# Pass in three arguments: the user, the password, and 'true' if the
# password has been pre-crypted (by preseeding).
setpassword () {
	local USER
	local PASSWD
	local PRECRYPTED
	USER="$1"
	PASSWD="$2"
	if [ "$3" = true ]; then
		PRECRYPTED=-e
	fi
	$chroot $ROOT chpasswd $PRECRYPTED -m <<EOF
$USER:$PASSWD
EOF
}

sudoers_admin_group () {
	if [ -f $ROOT/etc/sudoers ]; then
		cat <<EOF >>$ROOT/etc/sudoers

# Members of the admin group may gain root privileges
%admin	ALL=(ALL) ALL
EOF
	fi
}

add_to_aliases () {
	if ! grep -qi ^root: $ROOT/etc/aliases 2>/dev/null; then
		cat <<EOF >>$ROOT/etc/aliases
# Added by installer for initial user
root:	$1
EOF
		if [ -x $ROOT/usr/bin/newaliases ]; then
			$log $chroot $ROOT /usr/bin/newaliases
		fi
	fi
}

# Enable/disable shadow passwords.
db_get passwd/shadow
if [ "$RET" = true ]; then
	$log $chroot $ROOT shadowconfig on
else
	$log $chroot $ROOT shadowconfig off
fi

if ! root_password; then
	# Was the root password preseeded encrypted?
	if db_get passwd/root-password-crypted && [ "$RET" ]; then
		ROOT_PW="$RET"
		# The root password was preseeded encrypted. Clear it from
		# the database, then set it.
		db_set passwd/root-password-crypted ''
		setpassword root "$ROOT_PW" true
		ROOT_PW=
	else
		db_get passwd/root-password
		ROOT_PW="$RET"
		if [ "$ROOT_PW" ]; then
			# Clear the root password from the database, and set
			# the password.
			db_set passwd/root-password ''
			db_set passwd/root-password-again ''
			setpassword root "$ROOT_PW" false
			ROOT_PW=
		else
			# Disable the root password.
			echo 'root:*' | $chroot $ROOT chpasswd -e
		fi
	fi
fi

db_get passwd/make-user
if [ "$RET" = true ] && ! is_system_user; then
	if db_get passwd/user-password-crypted && [ "$RET" ]; then
		USER_PW="$RET"
		USER_PW_CRYPTED=true
	else
		db_get passwd/user-password
		USER_PW="$RET"
		USER_PW_CRYPTED=false
	fi

	if db_get passwd/user-uid && [ "$RET" ]; then
		if [ -x $ROOT/usr/sbin/adduser ]; then
			UIDOPT="--uid $RET"
		else
			UIDOPT="-u $RET"
		fi
	else
		UIDOPT=
	fi

	# Add the user to the database, using adduser in noninteractive
	# mode.
	db_get passwd/username
	USER="$RET"
	db_get passwd/user-fullname

	if [ -x $ROOT/usr/sbin/adduser ]; then
		$log $chroot $ROOT adduser --disabled-password --gecos "$RET" $UIDOPT "$USER" >/dev/null || true
	else
		$log $chroot $ROOT useradd -c "$RET" -m "$USER" $UIDOPT >/dev/null || true
	fi

	# Clear the user password from the database.
	if [ "$USER_PW_CRYPTED" = true ]; then
		db_set passwd/user-password-crypted ''
	else
		db_set passwd/user-password ''
		db_set passwd/user-password-again ''
	fi
	setpassword "$USER" "$USER_PW" "$USER_PW_CRYPTED"

	if [ -n "$USER" ]; then
		for group in lpadmin scanner; do
			$log $chroot $ROOT addgroup --system $group >/dev/null 2>&1 || true
		done
		for group in adm audio cdrom dialout floppy video plugdev dip lpadmin scanner; do
			$log $chroot $ROOT adduser "$USER" $group >/dev/null 2>&1 || true
		done

		if ! root_password; then
			sudoers_admin_group
			$log $chroot $ROOT addgroup --system admin >/dev/null 2>&1 || true
			$log $chroot $ROOT adduser "$USER" admin >/dev/null 2>&1 || true
		fi

		add_to_aliases "$USER"
	fi
fi

exit 0
